apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-java-demo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: server
  template:
    metadata:
      labels:
        service: server
    spec:
      containers:
        - name: server-service
          image: your-docker-hub-user/petclinic:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRES_URL
              value: "jdbc:postgresql://db.default.svc.cluster.local:5432/petclinic"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: service-entrypoint
  namespace: default
spec:
  type: NodePort
  selector:
    service: server
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30001
---
# üõ¢Ô∏è PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: db
  template:
    metadata:
      labels:
        service: db
    spec:
      containers:
        - name: postgres-db
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: petclinic
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Rommel@19
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: db-data
          emptyDir: {}
---
# üõ¢Ô∏è PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: default
spec:
  selector:
    service: db
  ports:
    - port: 5432
      targetPort: 5432







#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: docker-java-demo
#  namespace: default
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      service: server
#  template:
#    metadata:
#      labels:
#        service: server
#    spec:
#      containers:
#        - name: server-service
#          image: slitechnologies/spring-petclinic
#          imagePullPolicy: Always
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: service-entrypoint
#  namespace: default
#spec:
#  type: NodePort
#  selector:
#    service: server
#  ports:
#    - port: 8080
#      targetPort: 8080
#      nodePort: 30001
